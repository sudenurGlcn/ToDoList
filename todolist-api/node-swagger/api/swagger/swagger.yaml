# swagger: "2.0"
# info:
#   version: "0.0.1"
#   title: Hello World App
# # during dev, should point to your local machine
# host: localhost:10010
# # basePath prefixes all resource paths 
# basePath: /
# # 
# schemes:
#   # tip: remove http to make production-grade
#   - http
#   - https
# # format of bodies a client can send (Content-Type)
# consumes:
#   - application/json
# # format of the responses to the client (Accepts)
# produces:
#   - application/json
# paths:
#   /hello:
#     # binds a127 app logic to a route
#     x-swagger-router-controller: hello_world
#     get:
#       description: Returns 'Hello' to the caller
#       # used as the method name of the controller
#       operationId: hello
#       parameters:
#         - name: name
#           in: query
#           description: The name of the person to whom to say hello
#           required: false
#           type: string
#       responses:
#         "200":
#           description: Success
#           schema:
#             # a pointer to a definition
#             $ref: "#/definitions/HelloWorldResponse"
#         # responses may fall through to errors
#         default:
#           description: Error
#           schema:
#             $ref: "#/definitions/ErrorResponse"
#   /swagger:
#     x-swagger-pipe: swagger_raw
# # complex objects have schema definitions
# definitions:
#   HelloWorldResponse:
#     required:
#       - message
#     properties:
#       message:
#         type: string
#   ErrorResponse:
#     required:
#       - message
#     properties:
#       message:
#         type: string
openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/SUDENURGLCN_1/ToDoList/1.0.0
info:
  description: This is a simple API
  version: "1.0.0"
  title: Simple Inventory API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
paths:
  /toDoList:
    get:
      tags:
        - developers
      summary: To get all to-do items or search based on criteria
      operationId: getToDoList
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ToDoList'
  
    post:
      tags:
        - developers
      summary: Yeni bir görev oluştur
      description: Yeni bir görev oluşturmak için bu endpoint'i kullanın.
      operationId: createToDoItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToDoList'
      responses:
        '201':
          description: Görev başarıyla oluşturuldu
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToDoList'
        '400':
          description: Geçersiz istek gövdesi
        '401':
          description: Yetkisiz erişim
        '500':
          description: Sunucu hatası
  /toDoList/{id}:   # Burada /toDoList yolunun altına /{id} ekleniyor.
    parameters:
      - in: path
        name: id
        required: true
        description: The ID of the to-do item to be updated or deleted
        schema:
          type: integer
    get:
      tags:
        - developers
      summary: To get a specific to-do item by its ID
      operationId: getToDoItemById
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToDoList'
    put:
      tags:
        - developers
      summary: To update a specific to-do item
      operationId: updateToDoItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToDoList'
      responses:
        '200':
          description: Successful operation
    delete:
      tags:
        - developers
      summary: To delete a specific to-do item
      operationId: deleteToDoItem
      responses:
        '204':
          description: Successful deletion of the to-do item
  
components:
  schemas:
    ToDoList:
      type: object
      required:
        - id
        - name
        - description
        - releaseDate
        - endDate
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: "Yeni bir eklenti"
        description:
          type: string
          example: "yeni gorevin aciklamasi"
        releaseDate:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
        endDate:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'