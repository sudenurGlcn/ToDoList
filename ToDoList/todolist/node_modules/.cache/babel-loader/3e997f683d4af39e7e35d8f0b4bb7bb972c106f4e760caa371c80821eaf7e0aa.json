{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sude Nur\\\\Desktop\\\\ToDoList\\\\todolist\\\\src\\\\components\\\\Main.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { Form, Button, ListGroup, Container, Row, Col } from 'react-bootstrap';\n// import { FaTrash } from 'react-icons/fa'; // Çöp kutusu ikonu\n// import apis from '../Api.js';\n// import './style.css';\n\n// function Main() {\n//   const [todos, setTodos] = useState([]);\n//   const [newTodo, setNewTodo] = useState({\n//     id: \"\",\n//     name: \"\",\n//     description: \"\",\n//     releaseDate: \"\",\n//     endDate: \"\",\n//     completed: false // Tamamlandı durumu için bir state eklendi\n//   });\n\n//   useEffect(() => {\n//     fetchTodos();\n//   }, []);\n\n//   const fetchTodos = async () => {\n//     try {\n//       const response = await apis.getAllTodoItems();\n//       setTodos(response);\n//       console.log(response);\n//     } catch (error) {\n//       console.error('Error fetching todo list:', error);\n//     }\n//   };\n\n//   const handleInputChange = (event) => {\n//     setNewTodo({\n//       ...newTodo,\n//       [event.target.name]: event.target.value\n//     });\n//   };\n\n//   const handleAddTodo = async () => {\n//     try {\n//       await apis.createTodoItem(newTodo);\n//       fetchTodos();\n//       setNewTodo({\n//         name: \"\",\n//         description: \"\",\n//         releaseDate: \"\",\n//         endDate: \"\",\n//         completed: false // Yeni todo eklerken tamamlanmamış olarak ayarlanır\n//       });\n//       console.log('Todo added successfully');\n//     } catch (error) {\n//       console.error('Error adding todo:', error);\n//     }\n//   };\n\n//   const handleTodoClick = async (id) => {\n//     // ID'si verilen todo'nun tamamlanma durumu güncellenir\n//     try {\n//       await apis.updateTodoItem(id, { completed: true });\n//       fetchTodos();\n//     } catch (error) {\n//       console.error('Error updating todo:', error);\n//     }\n//   };\n\n//   const handleCheckboxChange = async (event, id) => {\n//     const isChecked = event.target.checked; // Checkbox durumu\n//     try {\n//       // Todo öğesinin tamamlanma durumunu güncelle\n//       await apis.updateTodoItem(id, { completed: isChecked });\n//       // Todo listesini yeniden getir\n//       fetchTodos();\n//       console.log('Todo status updated successfully');\n//     } catch (error) {\n//       console.error('Error updating todo status:', error);\n//     }\n//   };\n\n//   const handleDeleteTodo = async (id) => {\n//     try {\n//       await apis.deleteTodoItem(id);\n//       fetchTodos();\n//       console.log('Todo deleted successfully');\n//     } catch (error) {\n//       console.error('Error deleting todo:', error);\n//     }\n//   };\n\n//   return (\n//     <Container style={{marginRight:\"auto\",marginLeft:\"auto\",width:\"90%\"}}>\n//       <h1 style={{textAlign:\"center\"}}>Todo List</h1>\n//       <Form className='listAddItem'>\n//         <Row style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\"}}> \n//           <Col>\n//             <Form.Group controlId=\"formName\">\n//               <Form.Label>Name:</Form.Label>\n//               <Form.Control type=\"text\" name=\"name\" value={newTodo.name} onChange={handleInputChange} />\n//             </Form.Group>\n//           </Col>\n//           <Col>\n//             <Form.Group controlId=\"formDescription\">\n//               <Form.Label>Description:</Form.Label>\n//               <Form.Control type=\"text\" name=\"description\" value={newTodo.description} onChange={handleInputChange} />\n//             </Form.Group>\n//           </Col>\n//           <Col>\n//             <Form.Group controlId=\"formReleaseDate\">\n//               <Form.Label>Release Date:</Form.Label>\n//               <Form.Control type=\"date\" name=\"releaseDate\" value={newTodo.releaseDate} onChange={handleInputChange} />\n//             </Form.Group>\n//           </Col>\n//           <Col>\n//             <Form.Group controlId=\"formEndDate\">\n//               <Form.Label>End Date:</Form.Label>\n//               <Form.Control type=\"date\" name=\"endDate\" value={newTodo.endDate} onChange={handleInputChange} />\n//             </Form.Group>\n//           </Col>\n//           <Col>\n//             <Button variant=\"primary\" onClick={handleAddTodo}>Add Todo</Button>\n//           </Col>\n//         </Row>\n//       </Form>\n//       <hr />\n//       <h2 style={{ textAlign: \"center\" }}>Todo List</h2>\n//       <Container style={{ marginRight: \"auto\", marginLeft: \"auto\", width: \"90%\" }}>\n//         <Row>\n//           <ListGroup>\n//             {todos && todos.map(todo => (\n//               <ListGroup.Item\n//                 className='listitem'\n//                 key={todo.id}\n//                 style={{ textDecoration: todo.completed ? 'line-through' : 'none' }} // Tamamlanmışsa üstü çizili gösterir\n//               >\n//                 <Form.Group controlId=\"formCheckbox\">\n//                   <Form.Check\n//                     type=\"checkbox\"\n//                     label=\"Completed\"\n//                     checked={todo.completed} // Tamamlanma durumunu checkbox'un checked özelliğine bağla\n//                     onChange={(event) => handleCheckboxChange(event, todo.id)} // Checkbox durumu değiştiğinde handleCheckboxChange fonksiyonunu çağır\n//                     style={{marginRight:\"10px\",fontSize:\"13px\"}}\n//                   />\n//                 </Form.Group>\n//                 <Form.Group controlId=\"formName\" className='formlabel'>\n//                   <Form.Label className='lbl'>Name:</Form.Label>\n//                   <Form.Control type=\"text\" name=\"name\" value={todo.name} onChange={handleInputChange} />\n//                 </Form.Group>\n//                 <Form.Group controlId=\"formDescription\" className='formlabel'>\n//                   <Form.Label className='lbl'>Description:</Form.Label>\n//                   <Form.Control type=\"text\" name=\"description\" value={todo.description} onChange={handleInputChange} />\n//                 </Form.Group>\n//                 <Form.Group controlId=\"formReleaseDate\" className='formlabel'>\n//                   <Form.Label className='lbl'>Release Date:</Form.Label>\n//                   <Form.Control type=\"date\" name=\"releaseDate\" value={todo.releaseDate} onChange={handleInputChange} />\n//                 </Form.Group>\n//                 <Form.Group controlId=\"formEndDate\" className='formlabel'>\n//                   <Form.Label className='lbl'>End Date:</Form.Label>\n//                   <Form.Control type=\"date\" name=\"endDate\" value={todo.endDate} onChange={handleInputChange} />\n//                 </Form.Group>\n//                 <Button variant=\"danger\" onClick={() => handleDeleteTodo(todo.id)}>\n//                   <FaTrash /> {/* Çöp kutusu ikonu */}\n//                 </Button>\n//               </ListGroup.Item>\n//             ))}\n//           </ListGroup>\n//         </Row>\n//       </Container>\n//     </Container>\n//   );\n// }\n\n// export default Main;\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button, ListGroup, Container, Row, Col } from 'react-bootstrap';\nimport { FaTrash } from 'react-icons/fa'; // Çöp kutusu ikonu\nimport apis from '../Api.js';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState({\n    id: 0,\n    // Otomatik olarak artan ID\n    name: \"\",\n    description: \"\",\n    releaseDate: \"\",\n    endDate: \"\",\n    completed: false // Tamamlandı durumu için bir state eklendi\n  });\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  const fetchTodos = async () => {\n    try {\n      const response = await apis.getAllTodoItems();\n      setTodos(response);\n      console.log(response);\n    } catch (error) {\n      console.error('Error fetching todo list:', error);\n    }\n  };\n  const handleInputChange = event => {\n    setNewTodo({\n      ...newTodo,\n      [event.target.name]: event.target.value\n    });\n  };\n  const handleAddTodo = async () => {\n    try {\n      const highestId = todos.reduce((maxId, todo) => todo.id > maxId ? todo.id : maxId, 0);\n      const newId = highestId + 1;\n      const todoWithId = {\n        ...newTodo,\n        id: newId\n      };\n      await apis.createTodoItem(todoWithId);\n      fetchTodos();\n      setNewTodo({\n        id: newId + 1,\n        // Yeni ID'yi bir sonraki ID olarak ayarla\n        name: \"\",\n        description: \"\",\n        releaseDate: \"\",\n        endDate: \"\",\n        completed: false // Yeni todo eklerken tamamlanmamış olarak ayarlanır\n      });\n      console.log('Todo added successfully');\n    } catch (error) {\n      console.error('Error adding todo:', error);\n    }\n  };\n  const handleTodoClick = async id => {\n    // ID'si verilen todo'nun tamamlanma durumu güncellenir\n    try {\n      await apis.updateTodoItem(id, {\n        completed: true\n      });\n      fetchTodos();\n    } catch (error) {\n      console.error('Error updating todo:', error);\n    }\n  };\n  const handleCheckboxChange = async (event, id) => {\n    const isChecked = event.target.checked; // Checkbox durumu\n    try {\n      // Todo öğesinin tamamlanma durumunu güncelle\n      await apis.updateTodoItem(id, {\n        completed: isChecked\n      });\n      // Todo listesini yeniden getir\n      fetchTodos();\n      console.log('Todo status updated successfully');\n    } catch (error) {\n      console.error('Error updating todo status:', error);\n    }\n  };\n  const handleDeleteTodo = async id => {\n    try {\n      await apis.deleteTodoItem(id);\n      fetchTodos();\n      console.log('Todo deleted successfully');\n    } catch (error) {\n      console.error('Error deleting todo:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      marginRight: \"auto\",\n      marginLeft: \"auto\",\n      width: \"90%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      className: \"listAddItem\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"name\",\n              value: newTodo.name,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formDescription\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"description\",\n              value: newTodo.description,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formReleaseDate\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Release Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              name: \"releaseDate\",\n              value: newTodo.releaseDate,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formEndDate\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"End Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              name: \"endDate\",\n              value: newTodo.endDate,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleAddTodo,\n            children: \"Add Todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        marginRight: \"auto\",\n        marginLeft: \"auto\",\n        width: \"90%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          children: todos && todos.map(todo => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            className: \"listitem\",\n            style: {\n              textDecoration: todo.completed ? 'line-through' : 'none'\n            } // Tamamlanmışsa üstü çizili gösterir\n            ,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formCheckbox\",\n              children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"checkbox\",\n                label: \"Completed\",\n                checked: todo.completed // Tamamlanma durumunu checkbox'un checked özelliğine bağla\n                ,\n                onChange: event => handleCheckboxChange(event, todo.id) // Checkbox durumu değiştiğinde handleCheckboxChange fonksiyonunu çağır\n                ,\n                style: {\n                  marginRight: \"10px\",\n                  fontSize: \"13px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formName\",\n              className: \"formlabel\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                className: \"lbl\",\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"name\",\n                value: todo.name,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formDescription\",\n              className: \"formlabel\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                className: \"lbl\",\n                children: \"Description:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"description\",\n                value: todo.description,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formReleaseDate\",\n              className: \"formlabel\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                className: \"lbl\",\n                children: \"Release Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"date\",\n                name: \"releaseDate\",\n                value: todo.releaseDate,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formEndDate\",\n              className: \"formlabel\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                className: \"lbl\",\n                children: \"End Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"date\",\n                name: \"endDate\",\n                value: todo.endDate,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: () => handleDeleteTodo(todo.id),\n              children: [/*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 23\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 21\n            }, this)]\n          }, todo.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"f2O5UneDhg8Y2MwoqYj+jazLu4A=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","Form","Button","ListGroup","Container","Row","Col","FaTrash","apis","jsxDEV","_jsxDEV","Main","_s","todos","setTodos","newTodo","setNewTodo","id","name","description","releaseDate","endDate","completed","fetchTodos","response","getAllTodoItems","console","log","error","handleInputChange","event","target","value","handleAddTodo","highestId","reduce","maxId","todo","newId","todoWithId","createTodoItem","handleTodoClick","updateTodoItem","handleCheckboxChange","isChecked","checked","handleDeleteTodo","deleteTodoItem","style","marginRight","marginLeft","width","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","className","display","flexDirection","justifyContent","Group","controlId","Label","Control","type","onChange","variant","onClick","map","Item","textDecoration","Check","label","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/Sude Nur/Desktop/ToDoList/todolist/src/components/Main.jsx"],"sourcesContent":["\r\n// import React, { useState, useEffect } from 'react';\r\n// import { Form, Button, ListGroup, Container, Row, Col } from 'react-bootstrap';\r\n// import { FaTrash } from 'react-icons/fa'; // Çöp kutusu ikonu\r\n// import apis from '../Api.js';\r\n// import './style.css';\r\n\r\n// function Main() {\r\n//   const [todos, setTodos] = useState([]);\r\n//   const [newTodo, setNewTodo] = useState({\r\n//     id: \"\",\r\n//     name: \"\",\r\n//     description: \"\",\r\n//     releaseDate: \"\",\r\n//     endDate: \"\",\r\n//     completed: false // Tamamlandı durumu için bir state eklendi\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     fetchTodos();\r\n//   }, []);\r\n\r\n//   const fetchTodos = async () => {\r\n//     try {\r\n//       const response = await apis.getAllTodoItems();\r\n//       setTodos(response);\r\n//       console.log(response);\r\n//     } catch (error) {\r\n//       console.error('Error fetching todo list:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleInputChange = (event) => {\r\n//     setNewTodo({\r\n//       ...newTodo,\r\n//       [event.target.name]: event.target.value\r\n//     });\r\n//   };\r\n\r\n//   const handleAddTodo = async () => {\r\n//     try {\r\n//       await apis.createTodoItem(newTodo);\r\n//       fetchTodos();\r\n//       setNewTodo({\r\n//         name: \"\",\r\n//         description: \"\",\r\n//         releaseDate: \"\",\r\n//         endDate: \"\",\r\n//         completed: false // Yeni todo eklerken tamamlanmamış olarak ayarlanır\r\n//       });\r\n//       console.log('Todo added successfully');\r\n//     } catch (error) {\r\n//       console.error('Error adding todo:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleTodoClick = async (id) => {\r\n//     // ID'si verilen todo'nun tamamlanma durumu güncellenir\r\n//     try {\r\n//       await apis.updateTodoItem(id, { completed: true });\r\n//       fetchTodos();\r\n//     } catch (error) {\r\n//       console.error('Error updating todo:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleCheckboxChange = async (event, id) => {\r\n//     const isChecked = event.target.checked; // Checkbox durumu\r\n//     try {\r\n//       // Todo öğesinin tamamlanma durumunu güncelle\r\n//       await apis.updateTodoItem(id, { completed: isChecked });\r\n//       // Todo listesini yeniden getir\r\n//       fetchTodos();\r\n//       console.log('Todo status updated successfully');\r\n//     } catch (error) {\r\n//       console.error('Error updating todo status:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteTodo = async (id) => {\r\n//     try {\r\n//       await apis.deleteTodoItem(id);\r\n//       fetchTodos();\r\n//       console.log('Todo deleted successfully');\r\n//     } catch (error) {\r\n//       console.error('Error deleting todo:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Container style={{marginRight:\"auto\",marginLeft:\"auto\",width:\"90%\"}}>\r\n//       <h1 style={{textAlign:\"center\"}}>Todo List</h1>\r\n//       <Form className='listAddItem'>\r\n//         <Row style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\"}}> \r\n//           <Col>\r\n//             <Form.Group controlId=\"formName\">\r\n//               <Form.Label>Name:</Form.Label>\r\n//               <Form.Control type=\"text\" name=\"name\" value={newTodo.name} onChange={handleInputChange} />\r\n//             </Form.Group>\r\n//           </Col>\r\n//           <Col>\r\n//             <Form.Group controlId=\"formDescription\">\r\n//               <Form.Label>Description:</Form.Label>\r\n//               <Form.Control type=\"text\" name=\"description\" value={newTodo.description} onChange={handleInputChange} />\r\n//             </Form.Group>\r\n//           </Col>\r\n//           <Col>\r\n//             <Form.Group controlId=\"formReleaseDate\">\r\n//               <Form.Label>Release Date:</Form.Label>\r\n//               <Form.Control type=\"date\" name=\"releaseDate\" value={newTodo.releaseDate} onChange={handleInputChange} />\r\n//             </Form.Group>\r\n//           </Col>\r\n//           <Col>\r\n//             <Form.Group controlId=\"formEndDate\">\r\n//               <Form.Label>End Date:</Form.Label>\r\n//               <Form.Control type=\"date\" name=\"endDate\" value={newTodo.endDate} onChange={handleInputChange} />\r\n//             </Form.Group>\r\n//           </Col>\r\n//           <Col>\r\n//             <Button variant=\"primary\" onClick={handleAddTodo}>Add Todo</Button>\r\n//           </Col>\r\n//         </Row>\r\n//       </Form>\r\n//       <hr />\r\n//       <h2 style={{ textAlign: \"center\" }}>Todo List</h2>\r\n//       <Container style={{ marginRight: \"auto\", marginLeft: \"auto\", width: \"90%\" }}>\r\n//         <Row>\r\n//           <ListGroup>\r\n//             {todos && todos.map(todo => (\r\n//               <ListGroup.Item\r\n//                 className='listitem'\r\n//                 key={todo.id}\r\n//                 style={{ textDecoration: todo.completed ? 'line-through' : 'none' }} // Tamamlanmışsa üstü çizili gösterir\r\n//               >\r\n//                 <Form.Group controlId=\"formCheckbox\">\r\n//                   <Form.Check\r\n//                     type=\"checkbox\"\r\n//                     label=\"Completed\"\r\n//                     checked={todo.completed} // Tamamlanma durumunu checkbox'un checked özelliğine bağla\r\n//                     onChange={(event) => handleCheckboxChange(event, todo.id)} // Checkbox durumu değiştiğinde handleCheckboxChange fonksiyonunu çağır\r\n//                     style={{marginRight:\"10px\",fontSize:\"13px\"}}\r\n//                   />\r\n//                 </Form.Group>\r\n//                 <Form.Group controlId=\"formName\" className='formlabel'>\r\n//                   <Form.Label className='lbl'>Name:</Form.Label>\r\n//                   <Form.Control type=\"text\" name=\"name\" value={todo.name} onChange={handleInputChange} />\r\n//                 </Form.Group>\r\n//                 <Form.Group controlId=\"formDescription\" className='formlabel'>\r\n//                   <Form.Label className='lbl'>Description:</Form.Label>\r\n//                   <Form.Control type=\"text\" name=\"description\" value={todo.description} onChange={handleInputChange} />\r\n//                 </Form.Group>\r\n//                 <Form.Group controlId=\"formReleaseDate\" className='formlabel'>\r\n//                   <Form.Label className='lbl'>Release Date:</Form.Label>\r\n//                   <Form.Control type=\"date\" name=\"releaseDate\" value={todo.releaseDate} onChange={handleInputChange} />\r\n//                 </Form.Group>\r\n//                 <Form.Group controlId=\"formEndDate\" className='formlabel'>\r\n//                   <Form.Label className='lbl'>End Date:</Form.Label>\r\n//                   <Form.Control type=\"date\" name=\"endDate\" value={todo.endDate} onChange={handleInputChange} />\r\n//                 </Form.Group>\r\n//                 <Button variant=\"danger\" onClick={() => handleDeleteTodo(todo.id)}>\r\n//                   <FaTrash /> {/* Çöp kutusu ikonu */}\r\n//                 </Button>\r\n//               </ListGroup.Item>\r\n//             ))}\r\n//           </ListGroup>\r\n//         </Row>\r\n//       </Container>\r\n//     </Container>\r\n//   );\r\n// }\r\n\r\n// export default Main;\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Form, Button, ListGroup, Container, Row, Col } from 'react-bootstrap';\r\nimport { FaTrash } from 'react-icons/fa'; // Çöp kutusu ikonu\r\nimport apis from '../Api.js';\r\nimport './style.css';\r\n\r\nfunction Main() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [newTodo, setNewTodo] = useState({\r\n    id: 0, // Otomatik olarak artan ID\r\n    name: \"\",\r\n    description: \"\",\r\n    releaseDate: \"\",\r\n    endDate: \"\",\r\n    completed: false // Tamamlandı durumu için bir state eklendi\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchTodos();\r\n  }, []);\r\n\r\n  const fetchTodos = async () => {\r\n    try {\r\n      const response = await apis.getAllTodoItems();\r\n      setTodos(response);\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error('Error fetching todo list:', error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setNewTodo({\r\n      ...newTodo,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const handleAddTodo = async () => {\r\n    try {\r\n      const highestId = todos.reduce((maxId, todo) => (todo.id > maxId ? todo.id : maxId), 0);\r\n      const newId = highestId + 1;\r\n      const todoWithId = { ...newTodo, id: newId };\r\n      await apis.createTodoItem(todoWithId);\r\n      fetchTodos();\r\n      setNewTodo({\r\n        id: newId + 1, // Yeni ID'yi bir sonraki ID olarak ayarla\r\n        name: \"\",\r\n        description: \"\",\r\n        releaseDate: \"\",\r\n        endDate: \"\",\r\n        completed: false // Yeni todo eklerken tamamlanmamış olarak ayarlanır\r\n      });\r\n      console.log('Todo added successfully');\r\n    } catch (error) {\r\n      console.error('Error adding todo:', error);\r\n    }\r\n  };\r\n\r\n  const handleTodoClick = async (id) => {\r\n    // ID'si verilen todo'nun tamamlanma durumu güncellenir\r\n    try {\r\n      await apis.updateTodoItem(id, { completed: true });\r\n      fetchTodos();\r\n    } catch (error) {\r\n      console.error('Error updating todo:', error);\r\n    }\r\n  };\r\n\r\n  const handleCheckboxChange = async (event, id) => {\r\n    const isChecked = event.target.checked; // Checkbox durumu\r\n    try {\r\n      // Todo öğesinin tamamlanma durumunu güncelle\r\n      await apis.updateTodoItem(id, { completed: isChecked });\r\n      // Todo listesini yeniden getir\r\n      fetchTodos();\r\n      console.log('Todo status updated successfully');\r\n    } catch (error) {\r\n      console.error('Error updating todo status:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteTodo = async (id) => {\r\n    try {\r\n      await apis.deleteTodoItem(id);\r\n      fetchTodos();\r\n      console.log('Todo deleted successfully');\r\n    } catch (error) {\r\n      console.error('Error deleting todo:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n        <Container style={{marginRight:\"auto\",marginLeft:\"auto\",width:\"90%\"}}>\r\n          <h1 style={{textAlign:\"center\"}}>Todo List</h1>\r\n          <Form className='listAddItem'>\r\n            <Row style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\"}}> \r\n              <Col>\r\n                <Form.Group controlId=\"formName\">\r\n                  <Form.Label>Name:</Form.Label>\r\n                  <Form.Control type=\"text\" name=\"name\" value={newTodo.name} onChange={handleInputChange} />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group controlId=\"formDescription\">\r\n                  <Form.Label>Description:</Form.Label>\r\n                  <Form.Control type=\"text\" name=\"description\" value={newTodo.description} onChange={handleInputChange} />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group controlId=\"formReleaseDate\">\r\n                  <Form.Label>Release Date:</Form.Label>\r\n                  <Form.Control type=\"date\" name=\"releaseDate\" value={newTodo.releaseDate} onChange={handleInputChange} />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group controlId=\"formEndDate\">\r\n                  <Form.Label>End Date:</Form.Label>\r\n                  <Form.Control type=\"date\" name=\"endDate\" value={newTodo.endDate} onChange={handleInputChange} />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Button variant=\"primary\" onClick={handleAddTodo}>Add Todo</Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <hr />\r\n          <h2 style={{ textAlign: \"center\" }}>Todo List</h2>\r\n          <Container style={{ marginRight: \"auto\", marginLeft: \"auto\", width: \"90%\" }}>\r\n            <Row>\r\n              <ListGroup>\r\n                {todos && todos.map(todo => (\r\n                  <ListGroup.Item\r\n                    className='listitem'\r\n                    key={todo.id}\r\n                    style={{ textDecoration: todo.completed ? 'line-through' : 'none' }} // Tamamlanmışsa üstü çizili gösterir\r\n                  >\r\n                    <Form.Group controlId=\"formCheckbox\">\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        label=\"Completed\"\r\n                        checked={todo.completed} // Tamamlanma durumunu checkbox'un checked özelliğine bağla\r\n                        onChange={(event) => handleCheckboxChange(event, todo.id)} // Checkbox durumu değiştiğinde handleCheckboxChange fonksiyonunu çağır\r\n                        style={{marginRight:\"10px\",fontSize:\"13px\"}}\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formName\" className='formlabel'>\r\n                      <Form.Label className='lbl'>Name:</Form.Label>\r\n                      <Form.Control type=\"text\" name=\"name\" value={todo.name} onChange={handleInputChange} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formDescription\" className='formlabel'>\r\n                      <Form.Label className='lbl'>Description:</Form.Label>\r\n                      <Form.Control type=\"text\" name=\"description\" value={todo.description} onChange={handleInputChange} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formReleaseDate\" className='formlabel'>\r\n                      <Form.Label className='lbl'>Release Date:</Form.Label>\r\n                      <Form.Control type=\"date\" name=\"releaseDate\" value={todo.releaseDate} onChange={handleInputChange} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formEndDate\" className='formlabel'>\r\n                      <Form.Label className='lbl'>End Date:</Form.Label>\r\n                      <Form.Control type=\"date\" name=\"endDate\" value={todo.endDate} onChange={handleInputChange} />\r\n                    </Form.Group>\r\n                    <Button variant=\"danger\" onClick={() => handleDeleteTodo(todo.id)}>\r\n                      <FaTrash /> {/* Çöp kutusu ikonu */}\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n            </Row>\r\n          </Container>\r\n        </Container>\r\n      );\r\n}\r\n\r\nexport default Main;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}