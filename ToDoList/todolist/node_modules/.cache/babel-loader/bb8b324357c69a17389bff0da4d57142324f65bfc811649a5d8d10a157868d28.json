{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sude Nur\\\\Desktop\\\\ToDoList\\\\todolist\\\\src\\\\components\\\\Main.jsx\",\n  _s = $RefreshSig$();\n// // import React, { useState, useEffect } from 'react';\n// // import apis from '../Api.js';\n\n// // function Main() {\n// //   const [todos, setTodos] = useState([]);\n// //   const [newTodo, setNewTodo] = useState('');\n\n// //   useEffect(() => {\n// //     fetchTodos();\n// //   }, []);\n\n// //   const fetchTodos = async () => {\n// //     try {\n// //       const response = await apis.getAllTodoItems();\n// //       setTodos(response.data);\n// //     } catch (error) {\n// //       console.error('Error fetching todo list:', error);\n// //     }\n// //   };\n\n// //   const handleInputChange = (event) => {\n// //     setNewTodo(event.target.value);\n// //   };\n\n// //   const handleAddTodo = async () => {\n// //     if (!newTodo.trim()) return;\n\n// //     try {\n// //       await apis.createTodoItem({ name: newTodo });\n// //       fetchTodos();\n// //       setNewTodo('');\n// //       console.log('Todo added successfully');\n// //     } catch (error) {\n// //       console.error('Error adding todo:', error);\n// //     }\n// //   };\n\n// //   return (\n// //     <div>\n// //       <h1>Todo List</h1>\n// //       <div>\n// //         <input type=\"text\" value={newTodo} onChange={handleInputChange} />\n// //         <button onClick={handleAddTodo}>Add Todo</button>\n// //       </div>\n// //       <ul>\n// //         {todos && todos.map(todo => (\n// //           <li key={todo.id}>{todo.name}</li>\n// //         ))}\n// //       </ul>\n// //     </div>\n// //   );\n// // }\n\n// // export default Main;\n// import React, { useState, useEffect } from 'react';\n// import apis from '../Api.js';\n\n// function Main() {\n//   const [todos, setTodos] = useState([]);\n//   const [newTodo, setNewTodo] = useState({\n//     id: 0,\n//     name: \"Yeni bir eklenti\",\n//     description: \"yeni görevin açıklaması\",\n//     releaseDate: \"2016-08-29T09:12:33.001Z\",\n//     endDate: \"2016-08-29T09:12:33.001Z\"\n//   });\n\n//   useEffect(() => {\n//     fetchTodos();\n//   }, []);\n\n//   const fetchTodos = async () => {\n//     try {\n//       const response = await apis.getAllTodoItems();\n//       console.log(response);\n//       if (response && response.length > 0) {\n//         setTodos(response); // İlk nesneyi al\n//       } else {\n//         console.warn('No todo items found.');\n//         setTodos([]); // Boş diziyle güncelle\n//       }\n//     } catch (error) {\n//       console.error('Error fetching todo list:', error);\n//       setTodos([]); // Hata durumunda da boş diziyle güncelle\n//     }\n//   };\n//   const handleInputChange = (event) => {\n//     setNewTodo({\n//       ...newTodo,\n//       [event.target.name]: event.target.value\n//     });\n//   };\n\n//   const handleAddTodo = async () => {\n//     try {\n//       await apis.createTodoItem(newTodo);\n//       fetchTodos();\n//       console.log('Todo added successfully');\n//     } catch (error) {\n//       console.error('Error adding todo:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Todo List</h1>\n//       <div>\n//         <label>Name:</label>\n//         <input type=\"text\" name=\"name\" value={newTodo.name} onChange={handleInputChange} />\n//       </div>\n//       <div>\n//         <label>Description:</label>\n//         <input type=\"text\" name=\"description\" value={newTodo.description} onChange={handleInputChange} />\n//       </div>\n//       <div>\n//         <label>Release Date:</label>\n//         <input type=\"text\" name=\"releaseDate\" value={newTodo.releaseDate} onChange={handleInputChange} />\n//       </div>\n//       <div>\n//         <label>End Date:</label>\n//         <input type=\"text\" name=\"endDate\" value={newTodo.endDate} onChange={handleInputChange} />\n//       </div>\n//       <button onClick={handleAddTodo}>Add Todo</button>\n//       <hr />\n//       <h2>Todo List</h2>\n//       <ul>\n//         {todos && todos.map(todo => (\n//           <li key={todo.id}>{todo.name}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default Main;\n\nimport React, { useState, useEffect } from 'react';\nimport apis from '../Api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState({\n    name: \"\",\n    description: \"\",\n    releaseDate: \"\",\n    endDate: \"\"\n  });\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  const fetchTodos = async () => {\n    try {\n      const response = await apis.getAllTodoItems();\n      setTodos(response);\n      console.log(response);\n    } catch (error) {\n      console.error('Error fetching todo list:', error);\n    }\n  };\n  const handleInputChange = event => {\n    setNewTodo({\n      ...newTodo,\n      [event.target.name]: event.target.value\n    });\n  };\n  const handleAddTodo = async () => {\n    try {\n      await apis.createTodoItem(newTodo);\n      fetchTodos();\n      setNewTodo({\n        name: \"\",\n        description: \"\",\n        releaseDate: \"\",\n        endDate: \"\"\n      });\n      console.log('Todo added successfully');\n    } catch (error) {\n      console.error('Error adding todo:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"Y/fVRWnWF3Yh4cY8OUu/MFPKXeE=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","apis","jsxDEV","_jsxDEV","Main","_s","todos","setTodos","newTodo","setNewTodo","name","description","releaseDate","endDate","fetchTodos","response","getAllTodoItems","console","log","error","handleInputChange","event","target","value","handleAddTodo","createTodoItem","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sude Nur/Desktop/ToDoList/todolist/src/components/Main.jsx"],"sourcesContent":["// // import React, { useState, useEffect } from 'react';\r\n// // import apis from '../Api.js';\r\n\r\n// // function Main() {\r\n// //   const [todos, setTodos] = useState([]);\r\n// //   const [newTodo, setNewTodo] = useState('');\r\n\r\n// //   useEffect(() => {\r\n// //     fetchTodos();\r\n// //   }, []);\r\n\r\n// //   const fetchTodos = async () => {\r\n// //     try {\r\n// //       const response = await apis.getAllTodoItems();\r\n// //       setTodos(response.data);\r\n// //     } catch (error) {\r\n// //       console.error('Error fetching todo list:', error);\r\n// //     }\r\n// //   };\r\n\r\n// //   const handleInputChange = (event) => {\r\n// //     setNewTodo(event.target.value);\r\n// //   };\r\n\r\n// //   const handleAddTodo = async () => {\r\n// //     if (!newTodo.trim()) return;\r\n\r\n// //     try {\r\n// //       await apis.createTodoItem({ name: newTodo });\r\n// //       fetchTodos();\r\n// //       setNewTodo('');\r\n// //       console.log('Todo added successfully');\r\n// //     } catch (error) {\r\n// //       console.error('Error adding todo:', error);\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div>\r\n// //       <h1>Todo List</h1>\r\n// //       <div>\r\n// //         <input type=\"text\" value={newTodo} onChange={handleInputChange} />\r\n// //         <button onClick={handleAddTodo}>Add Todo</button>\r\n// //       </div>\r\n// //       <ul>\r\n// //         {todos && todos.map(todo => (\r\n// //           <li key={todo.id}>{todo.name}</li>\r\n// //         ))}\r\n// //       </ul>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// // export default Main;\r\n// import React, { useState, useEffect } from 'react';\r\n// import apis from '../Api.js';\r\n\r\n// function Main() {\r\n//   const [todos, setTodos] = useState([]);\r\n//   const [newTodo, setNewTodo] = useState({\r\n//     id: 0,\r\n//     name: \"Yeni bir eklenti\",\r\n//     description: \"yeni görevin açıklaması\",\r\n//     releaseDate: \"2016-08-29T09:12:33.001Z\",\r\n//     endDate: \"2016-08-29T09:12:33.001Z\"\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     fetchTodos();\r\n//   }, []);\r\n\r\n//   const fetchTodos = async () => {\r\n//     try {\r\n//       const response = await apis.getAllTodoItems();\r\n//       console.log(response);\r\n//       if (response && response.length > 0) {\r\n//         setTodos(response); // İlk nesneyi al\r\n//       } else {\r\n//         console.warn('No todo items found.');\r\n//         setTodos([]); // Boş diziyle güncelle\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error fetching todo list:', error);\r\n//       setTodos([]); // Hata durumunda da boş diziyle güncelle\r\n//     }\r\n//   };\r\n//   const handleInputChange = (event) => {\r\n//     setNewTodo({\r\n//       ...newTodo,\r\n//       [event.target.name]: event.target.value\r\n//     });\r\n//   };\r\n\r\n//   const handleAddTodo = async () => {\r\n//     try {\r\n//       await apis.createTodoItem(newTodo);\r\n//       fetchTodos();\r\n//       console.log('Todo added successfully');\r\n//     } catch (error) {\r\n//       console.error('Error adding todo:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Todo List</h1>\r\n//       <div>\r\n//         <label>Name:</label>\r\n//         <input type=\"text\" name=\"name\" value={newTodo.name} onChange={handleInputChange} />\r\n//       </div>\r\n//       <div>\r\n//         <label>Description:</label>\r\n//         <input type=\"text\" name=\"description\" value={newTodo.description} onChange={handleInputChange} />\r\n//       </div>\r\n//       <div>\r\n//         <label>Release Date:</label>\r\n//         <input type=\"text\" name=\"releaseDate\" value={newTodo.releaseDate} onChange={handleInputChange} />\r\n//       </div>\r\n//       <div>\r\n//         <label>End Date:</label>\r\n//         <input type=\"text\" name=\"endDate\" value={newTodo.endDate} onChange={handleInputChange} />\r\n//       </div>\r\n//       <button onClick={handleAddTodo}>Add Todo</button>\r\n//       <hr />\r\n//       <h2>Todo List</h2>\r\n//       <ul>\r\n//         {todos && todos.map(todo => (\r\n//           <li key={todo.id}>{todo.name}</li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Main;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport apis from '../Api.js';\r\n\r\nfunction Main() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [newTodo, setNewTodo] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    releaseDate: \"\",\r\n    endDate: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchTodos();\r\n  }, []);\r\n\r\n  const fetchTodos = async () => {\r\n    try {\r\n      const response = await apis.getAllTodoItems();\r\n      setTodos(response);\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error('Error fetching todo list:', error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setNewTodo({\r\n      ...newTodo,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const handleAddTodo = async () => {\r\n    try {\r\n      await apis.createTodoItem(newTodo);\r\n      fetchTodos();\r\n      setNewTodo({\r\n        name: \"\",\r\n        description: \"\",\r\n        releaseDate: \"\",\r\n        endDate: \"\"\r\n      });\r\n      console.log('Todo added successfully');\r\n    } catch (error) {\r\n      console.error('Error adding todo:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Todo List</h1>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC;IACrCW,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE,EAAE;IACfC,WAAW,EAAE,EAAE;IACfC,OAAO,EAAE;EACX,CAAC,CAAC;EAEFb,SAAS,CAAC,MAAM;IACdc,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,IAAI,CAACe,eAAe,CAAC,CAAC;MAC7CT,QAAQ,CAACQ,QAAQ,CAAC;MAClBE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IACvB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnCZ,UAAU,CAAC;MACT,GAAGD,OAAO;MACV,CAACa,KAAK,CAACC,MAAM,CAACZ,IAAI,GAAGW,KAAK,CAACC,MAAM,CAACC;IACpC,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMvB,IAAI,CAACwB,cAAc,CAACjB,OAAO,CAAC;MAClCM,UAAU,CAAC,CAAC;MACZL,UAAU,CAAC;QACTC,IAAI,EAAE,EAAE;QACRC,WAAW,EAAE,EAAE;QACfC,WAAW,EAAE,EAAE;QACfC,OAAO,EAAE;MACX,CAAC,CAAC;MACFI,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;EAED,oBACEhB,OAAA;IAAAuB,QAAA,eACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEf,CAAC;AAEV;AAACzB,EAAA,CApDQD,IAAI;AAAA2B,EAAA,GAAJ3B,IAAI;AAsDb,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}